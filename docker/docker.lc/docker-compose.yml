version: "3"
services:
  #PHP Service
  app:
    build:
      context: ../../
      dockerfile: ./docker/docker.lc/Dockerfile
    image: laradocker/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www/html/laravel-docker
    volumes:
      - ../../:/var/www/html/laravel-docker
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app_network
  #Nginx Service
  webserver:
    image: nginx:1.15-alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - ../../:/var/www/html/laravel-docker
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - app_network
  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: laravel-docker
      MYSQL_ROOT_PASSWORD: your_mysql_root_password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app_network
  #Certbot Service
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
#Docker Networks
networks:
  app_network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
